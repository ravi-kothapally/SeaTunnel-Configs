env {
  execution.parallelism = 1
  job.mode = "STREAMING"
  execution.checkpoint.interval = 5000
}

source {
  MongoDB-CDC {
    result_table_name = "fake"
    hosts = "localhost:27017"
    database = ["TargettingFramework"]
    collection = ["TargettingFramework.private_entity_schema"]
    schema = {
      fields {
        "_id": string,
        "entityName": string,
        "description": string,
        "tenantId": string,
        "draft": boolean,
        "customEntity": boolean,
        "visibility": string,
        "schemaReadAccess": string,
        "tenantsWithReadSchemaAccess": array<string>,
        "stats": map<string,int>,
        "icon": string,
        "universes": array<string>,
        "createdTimeMs": bigint,
        "updatedTimeMs": bigint,
        "createdBy": string,
        "attributeList": array<string>,
        "entityTags": map<string,string>
      }
    }
  }
}

transform {
  FieldMapper {
    source_table_name = "fake"
    result_table_name = "fake1"
    field_mapper = {
      "_id": "id",
      "entityName": "entityName",
      "description": "description",
      "tenantId": "tenantId",
      "draft": "draft",
      "customEntity": "customEntity",
      "visibility": "visibility",
      "schemaReadAccess": "schemaReadAccess",
      "tenantsWithReadSchemaAccess": "tenantsWithReadSchemaAccess",
      "stats": "stats",
      "icon": "icon",
      "universes": "universes",
      "createdTimeMs": "createdTimeMs",
      "updatedTimeMs": "updatedTimeMs",
      "createdBy": "createdBy",
      "attributeList": "attributeList",
      "entityTags": "entityTags"
    }
  }
}

sink {
  Elasticsearch {
    hosts = ["localhost:9200"]
    username = ""
    password = ""
    index = "tf_schema_test"
    primary_keys = ["id"]
    index_type = "private_entity_schema"
  }
}
